<?xml version="1.0" encoding="utf-8"?>
<!--
# ===================================================================================
# Copyright (c) 2024, Mabrains LLC
# Licensed under the GNU Lesser General Public License, Version 3.0 (the "License");
# you may not use this file except in compliance with the License.

#                    GNU Lesser General Public License
#                       Version 3, 29 June 2007

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# SPDX-License-Identifier: LGPL-3.0
# ===================================================================================
-->
<klayout-macro>
 <description>Run Klayout LVS</description>
 <version>0.1</version>
 <category>lvs</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>Run Klayout LVS</group-name>
 <menu-path>GenericPDK_menu&gt;end("GenericPDK").end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>lvs-dsl-xml</dsl-interpreter-name>
 <text>

require 'yaml'

# Load LVS options from a YAML file
#
# yaml_file_path - The path to the YAML file
#
# Returns a hash containing the loaded options
def load_options(yaml_file_path)
  options = {}
  if File.exist?(yaml_file_path)
    begin
      options = YAML.safe_load(File.read(yaml_file_path))
    rescue => e
      puts "Error loading options from YAML file: #{e.message}"
    end
  else
    puts "YAML file not found at #{yaml_file_path}. Using default options."
    options = set_default_options(yaml_file_path)
  end
  options
end

# Set default LVS options and save them to a YAML file
#
# yaml_file_path - The path to the YAML file
#
# Returns a hash containing the default options
def set_default_options(yaml_file_path)
  default_options = {
    'netlist' => '',
    'top_cell' => '',
    'run_mode' => 'flat',
    'no_net_names' => false,
    'spice_comments' => false,
    'net_only' => false,
    'no_simplify' => false,
    'combine_devices' => false,
    'top_lvl_pins' => false,
    'purge' => false,
    'purge_nets' => false,
    'verbose' => false,
  }
  default_options
end

dir_path = File.dirname(File.expand_path(__FILE__))

## reading the loaded gds file path
layout_path = Pathname.new(RBA::CellView.active.filename)

options = {}
yaml_file_path = "#{dir_path}/lvs_options.yml"
# Load options from YAML file
options = load_options(yaml_file_path)

## reading netlist option to get netlist_path
if options['netlist'] == ''
  net_name = layout_path.split[1].to_s.split('.')[0]

  net_dir = "#{layout_path.split[0]}/#{net_name}.cir"
  net_dir = "#{layout_path.split[0]}/#{net_name}.spice" unless File.exist? net_dir
  net_dir = "#{layout_path.split[0]}/#{net_name}.cdl" unless File.exist? net_dir
else
  net_dir = options['netlist']
end

if !options["net_only"]
  unless File.exist?(net_dir)
    raise StandardError, "The netlist path #{net_dir} doesn't exist, please recheck"
  end
end

# input layout
$input = (layout_path.realpath).to_s

## passing options to lvs run file
$schematic = net_dir.to_s
$topcell = options['top_cell'].to_s
$run_mode = options['run_mode'].to_s
$no_net_names = options['no_net_names'].to_s
$spice_comments = options['spice_comments'].to_s
$net_only = options["net_only"].to_s
$no_simplify = options['no_simplify'].to_s
$combine_devices = options['combine_devices'].to_s
$top_lvl_pins = options['top_lvl_pins'].to_s
$purge = options['purge'].to_s
$purge_nets = options['purge_nets'].to_s
$verbose = options['verbose'].to_s

## include lvs run file
#%include ../lvs/generic_tech.lvs

</text>
</klayout-macro>
